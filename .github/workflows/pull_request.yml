name: ci pull request

on:
  push:
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3 
      - name: version
        run: clang-format --version
      - name: format
        run: clang-format --dry-run --Werror src/*.cpp include/*.h
  tidy:
    runs-on: ubuntu-latest
    needs: format
    steps:
      - name: checkout
        uses: actions/checkout@v3 
      - name: install
        run: sudo apt-get install libgtest-dev
      - name: version
        run: clang-format --version && cmake --version
      - name: cmake
        run: cmake -B${{github.workspace}}/build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      - name: tidy
        run: clang-tidy -p build src/*.cpp include/*.h
  build:
    runs-on: ubuntu-latest
    needs: tidy
    steps:
      - name: checkout
        uses: actions/checkout@v3 
      - name: install
        run: sudo apt install ninja-build
      - name: version
        run: clang-format --version && cmake --version && ninja --version
      - name: cmake
        run: cmake -B${{github.workspace}}/build -GNinja -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      - name: build
        run: ninja -C${{github.workspace}}/build
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@v3 
      - name: install
        run: sudo apt install ninja-build
      - name: version
        run: clang-format --version && cmake --version && ninja --version
      - name: cmake
        run: cmake -B${{github.workspace}}/build -GNinja -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      - name: build
        run: ninja -C${{github.workspace}}/build
      - name: test run
        run: ${{github.workspace}}/build/test/run_tests
  memtests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@v3 
      - name: install
        run: sudo apt install ninja-build valgrind
      - name: version
        run: clang-format --version && cmake --version && ninja --version
      - name: cmake
        run: cmake -B${{github.workspace}}/build -GNinja -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      - name: build
        run: ninja -C${{github.workspace}}/build
      - name: test run
        run: valgrind ${{github.workspace}}/build/test/run_tests -- --exit=true